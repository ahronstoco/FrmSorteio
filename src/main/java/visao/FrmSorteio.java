package visao;
 import java.util.ArrayList;
 import java.util.Random;
 import javax.swing.JOptionPane;
 public class FrmSorteio extends javax.swing.JFrame {
 // Lista de números a serem sorteados simulando o globo de sorteio
 ArrayList<Integer> listaNumeros = new ArrayList();
 // Gerador de numeros aleatórios
 Random geradorNumero;
 // Para Saber quantos números ainda faltam para ser sorteado
 int quantidadeFaltante = 0;
 //ordenação do sorteio, meramente para exibir qual a posição foi sorteado, primeiro, segundo, etc...
 int ordem = 0;
 /**
 * Creates new form TelaPrincipal
 */
    public FrmSorteio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLNumerosorteado = new javax.swing.JLabel();
        JTFQuantidadeNumerosSorteados = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JASaida = new javax.swing.JTextArea();
        JBNovo = new javax.swing.JButton();
        JBSortear = new javax.swing.JButton();
        JBCancelar = new javax.swing.JButton();
        JBFechar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorteio");

        JLNumerosorteado.setFont(new java.awt.Font("Segoe UI", 1, 144)); // NOI18N
        JLNumerosorteado.setText("0");

        JTFQuantidadeNumerosSorteados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFQuantidadeNumerosSorteadosActionPerformed(evt);
            }
        });

        JASaida.setColumns(20);
        JASaida.setRows(5);
        jScrollPane1.setViewportView(JASaida);

        JBNovo.setText("Novo");
        JBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBNovoActionPerformed(evt);
            }
        });

        JBSortear.setText("Sortear");
        JBSortear.setEnabled(false);
        JBSortear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBSortearActionPerformed(evt);
            }
        });

        JBCancelar.setText("Cancelar");
        JBCancelar.setEnabled(false);
        JBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBCancelarActionPerformed(evt);
            }
        });

        JBFechar.setText("Fechar");
        JBFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBFecharActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantidade de números a serem sorteados:");

        jLabel3.setText("Número sorteado");

        jLabel4.setText("Lista dos números sorteados:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(JLNumerosorteado, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JBSortear)
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(JBFechar))
                            .addComponent(JBCancelar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JTFQuantidadeNumerosSorteados, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JBNovo))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFQuantidadeNumerosSorteados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBNovo)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JLNumerosorteado))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JBCancelar)
                            .addComponent(JBSortear))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(JBFechar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTFQuantidadeNumerosSorteadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFQuantidadeNumerosSorteadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTFQuantidadeNumerosSorteadosActionPerformed

    private void JBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBNovoActionPerformed
        // TODO add your handling code here:// Recupera a quantidade de números a serem sorteados
 int quantidadeNumeroSorteados = Integer.parseInt(this.JTFQuantidadeNumerosSorteados.getText());
 JASaida.setText("");
 // Limpa o text area
 listaNumeros.clear();
 JLNumerosorteado.setText("0");
 // Esvazia a lista
 // Zera o label do número sorteado
 // Para saber quantos números ainda faltam para ser sorteado
 quantidadeFaltante = 0;
 ordem = 0;
 if (quantidadeNumeroSorteados > 0) {
 // Verifica se a quantidade é maior que 0
 // Adiciona os números de 1 até quantidade sorteados na lista
 for (int i = 1; i <= quantidadeNumeroSorteados; i++) {
 listaNumeros.add(i);
 }
 quantidadeFaltante = quantidadeNumeroSorteados;
 this.JBNovo.setEnabled(false);
 // Desabilita o botão novo
 this.JBSortear.setEnabled(true);
 this.JBCancelar.setEnabled(true);
 } else {
 // Habilita o botão sortear
 // Habilita o botão cancelar
 JOptionPane.showMessageDialog(null, "Valor deve ser maior que 0!");
 }
    }//GEN-LAST:event_JBNovoActionPerformed

    private void JBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBCancelarActionPerformed
        // TODO add your handling code here: // Habilita o botão novo
 this.JBNovo.setEnabled(true);
 // Desabilita o botão sortear
 this.JBSortear.setEnabled(false);
 // Desabilita o botão cancelar
 this.JBCancelar.setEnabled(false);
    }//GEN-LAST:event_JBCancelarActionPerformed

    private void JBFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBFecharActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_JBFecharActionPerformed

    private void JBSortearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBSortearActionPerformed
        // TODO add your handling code here:
if (!listaNumeros.isEmpty()) { //Se existe números a serem sorteados então
 // Cria um novo gerador de número aleatório (Random)
 geradorNumero = new Random();
 // Pega um número aleatório entre 0 e o valor de quantidadeFaltante
 int indice = geradorNumero.nextInt(quantidadeFaltante);
 // Depois do sorteio retira a quantidade restante em-1
 quantidadeFaltante--;
 // Indica qual a posição que foi sorteado, primeiro, segundo, etc.
 ordem++;
 // Adiciona o numero sorteado no JTextArea
 JASaida.append(ordem + "º sorteado: " + listaNumeros.get(indice).toString() + "\n");
 // Mostra o número sorteado por meio do Label
 JLNumerosorteado.setText(listaNumeros.get(indice).toString());
 listaNumeros.remove(indice);
 // Remove o número da lista
 } else { // Se acabou os numeros a serem sorteados
 JOptionPane.showMessageDialog(null, "Não Há números a serem sorteados \n inicie um novo Sorteio");
 this.JBNovo.setEnabled(true);
 // Habilita o botão novo
 this.JBSortear.setEnabled(false);
 this.JBCancelar.setEnabled(false);
 }
    }//GEN-LAST:event_JBSortearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmSorteio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea JASaida;
    private javax.swing.JButton JBCancelar;
    private javax.swing.JButton JBFechar;
    private javax.swing.JButton JBNovo;
    private javax.swing.JButton JBSortear;
    private javax.swing.JLabel JLNumerosorteado;
    private javax.swing.JTextField JTFQuantidadeNumerosSorteados;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
